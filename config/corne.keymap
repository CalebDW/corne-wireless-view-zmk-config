/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define XXX &none
#define ___ &trans

#define DEFAULT 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUN 4

#include "combos.dtsi"

/ {
    // chosen {
    //     zmk,matrix_transform = &five_column_transform;
    // };

    keymap {
        compatible = "zmk,keymap";

        // Engram (https://engram.dev)
        // -----------------------------------------------------------------------------
        // | [/{ |  1  |  2  |  3  |  4  |  5  | |  6  |  7  |  8  |  9  |  0  | ]/} |
        // | XXX |  B  |  Y  |  O  |  U  | '/( | | "/) |  L  |  D  |  W  |  V  |  Z  |
        // | XXX |  C  |  I  |  E  |  A  | ,/; | | ./: |  H  |  T  |  S  |  N  |  Q  |
        // | XXX |  G  |  X  |  J  |  K  | -/_ | | ?/! |  R  |  M  |  F  |  P  | XXX |
        // |                 | ESC | TAB | SPC | | RET | BCK | DEL |                 |
        // -----------------------------------------------------------------------------
        default_layer {
            // TODO:
            //   - move Z/Q to another layer/combo
            //   - revisit symbols on center columns
            label = "Base";
            bindings = <
                // Engram (https://engram.dev) Modified
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    XXX           &kp B         &kp Y         &kp O         &kp U         &kp SQT           &kp SEMI      &kp L         &kp D         &kp W         &kp V         XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    XXX           &kp C         &kp I         &kp E         &kp A         &kp COMMA         &kp DOT       &kp H         &kp T         &kp S         &kp N         XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    XXX           &kp G         &kp X         &kp J         &kp K         &kp MINUS         &kp SLASH     &kp R         &kp M         &kp F         &kp P         XXX
                // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                              &kp ESC       &lt NAV DEL   &lt NUM SPACE     &lt FUN RET   &lt SYM BSPC  &kp TAB
                //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    XXX           &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      ___           ___           ___           ___           ___           XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    XXX           ___           ___           ___           ___           ___               ___           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    XXX           ___           ___           ___           ___           ___               ___           ___           ___           ___           ___           XXX
                // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                              ___           ___           ___               ___           ___           ___
                //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    ___           ___           ___           ___           ___           ___               &kp KP_DIVIDE &kp N7        &kp N8        &kp N9        &kp MINUS     XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    ___           ___           ___           ___           ___           ___             &kp KP_MULTIPLY &kp N4        &kp N5        &kp N6        &kp EQUAL     XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    ___           ___           ___           ___           ___           ___               &kp N0        &kp N1        &kp N2        &kp N3        &kp KP_DOT    XXX
                // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                              ___           ___           ___               ___           ___           ___
                //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    XXX           &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      ___           &kp LPAR      &kp RPAR      XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    XXX           ___           ___           ___           ___           ___               &kp MINUS     &kp EQUAL     &kp LBKT      &kp RBKT      &kp BSLH      XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    XXX           ___           ___           ___           ___           ___               &kp UNDER     &kp PLUS      &kp LBRC      &kp RBRC      &kp PIPE      XXX
                // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                              ___           ___           ___               ___           ___           ___
                //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                    XXX           &kp F15       &kp F7        &kp F8        &kp F9        &kp F12           ___           ___           ___           ___           ___           XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    XXX           &kp F14       &kp F4        &kp F5        &kp F6        &kp F11           ___           ___           ___           ___           ___           XXX
                // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                    XXX           &kp F13       &kp F1        &kp F2        &kp F3        &kp F10           ___           ___           ___           ___           ___           XXX
                // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                              ___           ___           ___               ___           ___           ___
                //                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    };
};
